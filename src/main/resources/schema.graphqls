type Query {
  eventById(id: ID!): Event
  seriesById(id: ID!): Series
  events(sortBy: EventSort, limit: Int, after: String): EventConnection!
}

type Event {
  id: ID!
  title: String!
  description: String
  "Duration in seconds"
  duration: Float!
  series: Series
}

"A series. Can contain multiple events."
type Series {
  id: ID!
  name: String!
  description: String
  events(sortBy: EventSort, limit: Int, after: String): EventConnection!
}

type EventConnection {
  edges: [EventEdge!]!
  pageInfo: PageInfo!
}

type EventEdge {
  cursor: String!
  node: Event!
}

type PageInfo {
  endCursor: String
  startCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

enum EventSort {
  TITLE
  DURATION
}